2. Јазлите во графот се пишувани според бројот на линијата код во SILab2.java
3. Цикломатската комплексност на дадениот код е 9. Доколку изброиме колку предикатни јазли има, тоа се 8 плус еден, 
добиваме 9. Или ако ги изброиме регионите, тоа се 8 плус еден за целиот граф, тоа се 9. Или ако ги изброиме рабовите (33)
и јазлите (26), 33-26+2=9.
4. Според  Every Statement критериумот минималниот број на тест случаи ќе биде 3. Првиот тест случај е кога испраќаме
празна листа. Во тој случај 7, 8 и 40 линија код, односно кога ќе биде исполнет условот во 7 линија, ќе се изврши
и 8 линија и тука програмата завршува (Exception).
Вториот тест случај е кога за листата може да испратиме било кои вредности, јас зедов да се 2 и 3, односно должината 
на листата да биде 2, за да може да биде исполнет условот во 12 линија код. rootOfN ќе биде 1, а n=2. Со овој тест 
случај ги изминуваме 7, 10, 11, 12, 13 и 40 линија код. Значи кога ќе биде исполнет условот во 12 линија, ќе се изврши
и 13 линија и тука програмата завршува (Exception).
Третиот тест случај е кога можеме да ги изминеме преостанатите линии код, односно кога не влегуваме во условите, што даваат
Exception. За овој случај зедов листата да биде ["#", "1", "#", "1", "#", "1", "#", "1", "#"], со тоа n=9, a rootOfN=3.
Сега не влегуваме во првиот и вториот if-услов, односно се извршуваат 7, 10, 11, 12, 15, 16.1, 16.2, 16.3, 17, 18, 19,
20, 21, 23, 24, 27, 28, 30, 31, 33, 35, 36, 39, 40 линија код. Со овој тест пример програмата ќе ја врати новата листа.
Со овие три тест примери, ги изминуваме сите линии код. 
5. За да го испитаме Every branch критериумот, можеме да ги искористиме истите тест примери од Every statement, за да
се поминат сите врски.
Значи со првиот тест пример ги изминуваме 7-8 и 8-40 врска, тоа е кога се праќа празна листа 
(Exception-"List length should be greater than 0").
Со вториот тест пример ги изминуваме 7-10, 10-11, 11-12, 12-13 и 13-40 врска, тоа е кога n=2 и rootOfN=1 
(Exception-"List length should be a perfect square").
Со третиот тест пример ги изминуваме  7-10, 10-11, 11-12, 12-15, 15-16.1, 16.1-16.2, 16.2-17, 17-18, 18-19, 19-20, 20-21,
21-27, 20-23, 23-24, 24-27, 19-27, 27-28, 27-30, 28-30, 30-31, 30-33, 31-33, 33-16.3, 17-35, 35-36, 36-16.3, 16.3-16.2,
16.2-39 и 39-40 врска. Со овој тест пример ја враќаме новата листа, односно ["#", "3", "#", "3", "#", "3", "#", "3", "#"] 
во овој случај. 
6. Првиот тест за Every statement е кога очекуваме програмата да даде грешка, односно RuntimeException, тоа го пишувам со 
помош на assertThrows, каде ја повикувам функцијата со аргумент празна листа (во мојот случај ја повикувам 
List<String> kreiraj_lista и не ставам елементи на листата). Тоа што ќе се врати од assertThrows, го зачувувам во променлива
и потоа со assertTrue проверувам дали тоа што е запишано во променливата ја содржи реченицата "List length should be greater than 0".
Ако тоа е така значи поминал тест примерот каде треба да се се фрли Exception за празна листа.

Вториот тест случај е кога праќам листа со два елементи и програмата треба повторно да даде Exception, бидејќи тогаш
ќе биде исполнет rootOfN * rootOfN  != n овој услов. Во мојот случај повторно со assertThrows ја повикувам функцијата со аргумент 
2 и 3 (во мојот случај ја повикувам List<String> kreiraj_lista, за да креира листа и ги праќам 2 и 3 за аргументи на таа функција).
Тоа што ќе се врати од assertThrows, го зачувувам во променлива и потоа со assertTrue проверувам дали тоа што е запишано во 
променливата ја содржи реченицата "List length should be a perfect square". Доколку е така тогаш поминал и овој тест пример
кога повторно фрла Exception.

Третиот тест случај го тестирам со assertEquals, односно очекувам да се врати "#", "3", "#", "3", "#", "3", "#", "3", "#"
оваа листа, што ја креирам со помош на функцијата kreiraj_lista, а како аргумент на функцијата која ја тестирам (List<String> function)
ја праќам "#", "1", "#", "1", "#", "1", "#", "1", "#" оваа листа. Ако return_lista е еднаква со листата што ќе ја врати 
функцијата со аргумент "#", "1", "#", "1", "#", "1", "#", "1", "#", тогаш поминал и овој тест пример. 

За Every branch методот, ги праќам потполно истите тест примери, бидејќи како што видовме во excel документот за Every branch
се доволно тест примерите од Every statement, односно со истите тест примери се поминува и секоја една врска меѓу два соседни јазли (се поминуваат сите врски во графот).
